node -v / verifica a versão do node
npm -v / verifica a versão do node package manager

http-server ./   -> ./ indica que é na mesma pasta
assim subimos um servidor http local


Javascript para web:
window -> tudo que contém em nossa tela, para manipular o browser.
document -> é o documento corrente, exemplo o index.html

document.getElementById("nome id"); -> buscamos um elemento pelo ID declarado no documento html corrente
btnTeste.addEventListener("click", function(){
    console.log("clicou")
});
aqui escutamos o evento atravvés do addEventListener, quando ocorrer o clique, iremos executar a função de imprimir mensagem no console



Sempre devemos adicionar um normalize css em nossos projetos, o famoso reset css. Para evitar quebras de estilo em navegadores distintos.
Dica: desativar o cache em modo dev em navegadores


dica: Mobile first, aplicar primeiro a responsividade para mobile. Depois vai aplicando o css necessário para telas maiores

==========================================================================================================================================================

Protocolo HTTP é cliente x servidor


requisição http:

URL: ${endereço}/${path: caminho de identificação do recurso}

Request method: tipo da requisição (get, post, put, delete, patch,...)


query string & path params

path params: parametros passado no caminho (URL)

query string: tudo que está após "?" em um path(URL), exemplo:

path: https://link.com/usuario?name=joao&age=20
?name=joao&age=20 -> query string


HEADERS: "configurações" da requisição.


BODY: corpo da requisição. Informações a ser enviada/recebida atráves dos endpoints da api.

STATUS CODE: código do resultado da query, exemplo 200: OK.



Promisse.all([]) => recebe uma lista de promessas 
fetch()=> retorna response
